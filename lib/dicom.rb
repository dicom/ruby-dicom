# Loads the files that are used by Ruby DICOM.
#
# The following classes are meant to be used by users of Ruby DICOM:
# * DObject - for reading, manipulating and writing DICOM files.
# * Element, Sequence, Item, Parent, Elemental - users who wish to interact with their DICOM objects will use these classes/modules.
# * ImageItem - Image related methods are found in this class.
# * DClient - for client side network communication, like querying, moving & sending DICOM files.
# * DServer - for server side network communication: Setting up your own DICOM storage node (SCP).
# * Anonymizer - a convenience class for anonymizing your DICOM files.
#
# The rest of the classes visible in the documentation generated by RDoc is in principle
# 'private' classes, which are mainly of interest to developers.

# Logging
require 'dicom/logging'
# Core library:
# Super classes/modules:
require 'dicom/image_processor'
require 'dicom/parent'
require 'dicom/image_item'
require 'dicom/elemental'
# Subclasses and independent classes:
require 'dicom/d_client'
require 'dicom/dictionary'
require 'dicom/d_library'
require 'dicom/d_object'
require 'dicom/d_read'
require 'dicom/d_server'
require 'dicom/d_write'
require 'dicom/element'
require 'dicom/file_handler'
require 'dicom/item'
require 'dicom/link'
require 'dicom/sequence'
require 'dicom/stream'
# Extensions to the Ruby library:
require 'dicom/ruby_extensions'
# Module settings:
require 'dicom/version'
require 'dicom/constants'
require 'dicom/variables'
# Image processors:
require 'dicom/image_processor_mini_magick'
require 'dicom/image_processor_r_magick'

# Extensions (non-core functionality):
require 'dicom/anonymizer'
